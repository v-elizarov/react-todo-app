{"version":3,"sources":["components/tasks-counter/index.js","components/tasks-counter/tasks-counter.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/form-add-new/form-add-new.js","components/form-add-new/index.js","components/search-panel/search-panel.js","components/search-panel/index.js","components/filter-panel/filter-panel.js","components/filter-panel/index.js","components/alert-box/index.js","components/alert-box/alert-box.js","components/app/app.js","components/app/index.js","index.js"],"names":["TasksCounter","props","count","arrOfTasks","filter","item","done","length","className","ToDoListItem","classNamesForLabel","classNamesForBtn","disabled","classNamesForBtnLenghtBefore","important","onClick","onToggleDone","label","type","onToggleImportant","onDeleteTask","ToDoList","listItems","map","id","other","FormAddNew","state","term","onSubmit","e","preventDefault","setState","onAddTask","test","onTermChange","target","value","maxlength","this","placeholder","maxLength","onChange","Component","SearchPanel","onSearchChange","FilterPanel","arrOfButtons","onFilterChange","currentFilter","filterButtons","classNames","AlertBox","countVisibleTasks","search","message","classNamesForBox","classNamesForIcon","shortTerm","slice","toUpperCase","App","uniqID","indx","findIndex","newTask","onToggleProperty","arr","field","task","newValue","toLowerCase","indexOf","appHeader","arrOfVisibleTasks","searchTasks","filterTasks","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c822a10d.chunk.js","sourcesContent":["import TasksCounter from \"./tasks-counter\"\n\nexport default TasksCounter","import React from 'react'\n\nimport \"./tasks-counter.css\"\n\nconst TasksCounter = (props) => {\n    // count items with done === false\n    const count = props.arrOfTasks.filter((item) => !item.done).length\n    // count items with done === true\n    const done = props.arrOfTasks.filter((item) => item.done).length\n    \n    return (\n        <span className=\"tasks-counter\">\n            {count} more to do, {done} done\n        </span>\n    )\n}\n\nexport default TasksCounter","import ToDoListItem from \"./todo-list-item\"\n\nexport default ToDoListItem","import React from 'react'\n\nimport \"./todo-list-item.css\"\n\nconst TodoListItem = (props) => {\n    let classNamesForLabel = \"\"\n    let classNamesForBtn = \"btn btn-sm\"\n    let disabled = \"\"\n    const classNamesForBtnLenghtBefore = classNamesForBtn.length\n    \n    if (props.important) {\n        classNamesForLabel += \" important\"\n        classNamesForBtn += \" btn-primary\"\n    }\n\n    if (props.done) {\n        classNamesForLabel += \" done\"\n        classNamesForBtn += \" hide\"\n        disabled = \"disabled\"\n\n        if (props.important) {\n            classNamesForBtn += \" btn-success\"\n        } else if (!props.important) {\n            classNamesForBtn += \" btn-outline-success\"\n        }\n    }\n\n    if (classNamesForBtn.length === classNamesForBtnLenghtBefore) {\n        classNamesForBtn += \" btn-outline-primary\"\n    }\n\n    return (\n        <span className=\"todo-list-item\">\n            <span \n                className={classNamesForLabel}\n                onClick={props.onToggleDone}>\n                {props.label}\n            </span>\n\n            <button\n                type=\"button\"\n                className={classNamesForBtn}\n                disabled={disabled}\n                onClick={props.onToggleImportant}>\n                <i className=\"bi bi-exclamation\"></i>\n            </button>\n            \n            <button \n                type=\"button\"\n                className=\"btn btn-sm btn-outline-danger hide\"\n                onClick={props.onDeleteTask}>\n                <i className=\"bi bi-trash\"></i>\n            </button>\n        </span>\n    )\n}\n\nexport default TodoListItem","import ToDoList from \"./todo-list\"\n\nexport default ToDoList","import React from 'react'\n\nimport TodoListItem from '../todo-list-item'\n\nimport \"./todo-list.css\"\n\nconst ToDoList = (props) => {\n    const listItems = props.arrOfTasks.map((item) => {\n        const {id, ...other} = item\n\n        return (\n            <li key={id} className=\"list-group-item\">\n                <TodoListItem \n                    {...other}\n                    onDeleteTask={() => props.onDeleteTask(id)}\n                    onToggleDone={() => props.onToggleDone(id)}\n                    onToggleImportant={() => props.onToggleImportant(id)}/>\n            </li>\n        )\n    })\n\n    return (\n        <ul className=\"list-group todo-list\">\n            { listItems }\n        </ul>\n    )\n}\n\nexport default ToDoList","import React, { Component } from 'react'\n\nimport \"./form-add-new.css\"\n\nexport default class FormAddNew extends Component {\n    state = {\n        term: ''\n    }\n\n    onSubmit = (e) => {\n        // disable page reload\n        e.preventDefault();\n        // get current value from this state\n        const { term } = this.state\n        // change term to default ''\n        this.setState({term: ''})\n        // get a function via props\n        const { onAddTask } = this.props\n\n        // if term containts only spaces\n        // don't create a new task\n        const regexp = /^\\s*$/\n        const isTermEmpty = regexp.test(term)\n\n        if (!isTermEmpty) {\n            onAddTask(term)\n        } \n    }\n\n    onTermChange = (e) => {\n        this.setState({\n            term: e.target.value\n        })\n    }\n    \n    render() {\n        const maxlength = \"0123456789ABCDEFGHIJKLMNOPQRSTUVW\".length\n\n        return (\n            <form onSubmit={this.onSubmit}>\n            <div className=\"input-group mb-3\">\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"What needs to be done?\"\n                    maxLength={maxlength}\n                    value={this.state.term}\n                    onChange={this.onTermChange}/>\n\n                <button className=\"btn btn-outline-success\" type=\"submit\">\n                    <i className=\"bi bi-plus-lg\"></i>\n                </button>\n            </div>\n        </form>\n        )\n    }\n}","import FormAddNew from \"./form-add-new\"\n\nexport default FormAddNew","import React, { Component } from 'react'\n\nimport \"./search-panel.css\"\n\nexport default class SearchPanel extends Component {\n\n    state = {\n        term: ''\n    }\n\n    onTermChange = (e) => {\n        const term = e.target.value\n\n        this.setState({ term: term })\n        \n        this.props.onSearchChange(term)\n    }\n\n    render() {\n        return (\n            <div className=\"search-panel\">\n                <div className=\"input-group mb-3\">\n\n                    <span className=\"input-group-text\">\n                        <i className=\"bi bi-search\"></i>\n                    </span>\n\n                    <input \n                        type=\"text\" \n                        className=\"form-control\"\n                        placeholder=\"Type here to search\"\n                        value={this.state.term}\n                        onChange={this.onTermChange}/>\n                </div>\n            </div>\n        )\n    }\n}","import SearchPanel from \"./search-panel\"\n\nexport default SearchPanel","import React, { Component } from 'react'\n\nimport \"./filter-panel.css\"\n\nexport default class FilterPanel extends Component {\n    state = {\n        filter: 'all',\n        arrOfButtons: [\n            {id: 'all', label: 'All'},\n            {id: 'active', label: 'Active'},\n            {id: 'done', label: 'Done'}\n        ]\n    }\n\n    onFilterChange = (e) => {\n        const currentFilter = e.target.id\n\n        if (currentFilter !== this.state.filter) {\n            this.setState({ filter: currentFilter })\n            this.props.onFilterChange(currentFilter)\n        }\n    }\n\n    render() {\n        const filterButtons = this.state.arrOfButtons.map((item) => {\n            let classNames = \"btn btn-primary\"\n\n            if (item.id === this.state.filter) {\n                classNames += \" active\"\n            }\n\n            return (\n                <button\n                    key={item.id}\n                    id={item.id}\n                    type=\"button\"\n                    className={classNames}\n                    onClick={this.onFilterChange}>\n                    {item.label}\n                </button>\n            )\n        })\n\n        return (\n            <div className=\"btn-group status-filter\">\n                {filterButtons}\n            </div>\n        )\n    }\n}","import FilterPanel from \"./filter-panel\"\n\nexport default FilterPanel","import AlertBox from \"./alert-box\"\n\nexport default AlertBox","import React from 'react'\n\nimport \"./alert-box.css\"\n\nconst AlertBox = ({countVisibleTasks, search, filter}) => {\n    if (countVisibleTasks > 0) {\n        return null\n    } else {\n        let classNamesForBox = \"alert alert-box\"\n        let classNamesForIcon = \"bi\"\n        let message\n\n        if (search !== '') {\n        // If the search can't find the term -> show the warning box\n            classNamesForBox += \" alert-warning\"\n            classNamesForIcon += \" bi-exclamation-triangle\"\n\n            let shortTerm = search.slice(0, 10)\n            \n            if (search.length > 10) {\n                shortTerm += \"...\" \n            } \n\n            message = (\n                <span>\n                    Can't find <strong> \"{shortTerm}\" </strong> in <strong> {filter[0].toUpperCase() + filter.slice(1)} </strong>. Try to type smth. else...\n                </span>\n            )\n        } else {\n            switch (filter) {\n            // If the list is empty -> show the primary box\n                case 'all':\n                    classNamesForBox += \" alert-primary\"\n                    classNamesForIcon += \" bi-info-circle\"\n                    message = \"The list is empty! You can add a new task to fix it.\"\n                    break\n            // If <Active> filter is empty -> show the success box\n                case 'active':\n                    classNamesForBox += \" alert-success\"\n                    classNamesForIcon += \" bi-check-circle\"\n                    message = \"You haven't active tasks yet.\"\n                    break\n            // If <Done> filter is empty -> show the secondary box\n                case 'done':\n                    classNamesForBox += \" alert-secondary\"\n                    classNamesForIcon += \" bi-emoji-neutral\"\n                    message = \"The list of completed tasks is empty.\"\n                    break\n                default:\n                    break\n            }\n        }\n       \n        return (\n            <div className={classNamesForBox}>\n                <i className={classNamesForIcon}> </i>\n                {message}\n            </div>\n        )\n    }\n}\n\nexport default AlertBox","import React, { Component } from 'react'\n\nimport TasksCounter from '../tasks-counter'\nimport ToDoList from '../todo-list'\nimport FormAddNew from '../form-add-new'\nimport SearchPanel from '../search-panel'\nimport FilterPanel from '../filter-panel'\nimport AlertBox from '../alert-box'\n\nimport \"./app.css\"\nexport default class App extends Component {\n\n    uniqID = 3\n\n    state = {\n        arrOfTasks: [\n            {id: 1, label: \"Drink a cup of coffee\", important: false, done: true},\n            {id: 2, label: \"Create new react app\", important: false, done: false},\n            {id: 3, label: \"Send my CV to a company\", important: true, done: false}\n        ],\n        filter: 'all', // all, active, done\n        search: ''\n    }\n\n    onFilterChange = (term) => {\n        this.setState({ filter: term })\n    }\n\n    onSearchChange = (term) => {\n        this.setState({ search: term })\n    }\n\n    onDeleteTask = (id) => {\n        this.setState(({arrOfTasks}) => {\n            const indx = arrOfTasks.findIndex((item) => item.id === id)\n            \n            // create new array without the deleted item\n            const arrOfNewData = [\n                ...arrOfTasks.slice(0, indx),\n                ...arrOfTasks.slice(indx + 1)\n            ]\n\n            return {\n                arrOfTasks: arrOfNewData\n            }\n        })\n    }\n\n    onAddTask = (label) => {\n        this.setState(({arrOfTasks}) => {\n            const newTask = {\n                id: ++this.uniqID,\n                label: label,\n                important: false,\n                done: false\n            }\n\n            return {\n                arrOfTasks: [\n                    ...arrOfTasks,\n                    newTask\n                ]\n            }\n        })   \n    }\n\n    onToggleProperty = (arr, id, field) => {\n       // find index of the task by id \n       const indx = arr.findIndex((item) => item.id === id)\n       const task = arr[indx]\n       // invert the value\n       const newValue = !task[field]\n       // build a new task with the changed field (done/important)\n       const newTask = {\n           ...task,\n           [field]: newValue\n       }\n       // return a new arr that contains the changed task\n       return [\n           ...arr.slice(0, indx),\n           newTask,\n           ...arr.slice(indx + 1)\n       ]\n    }\n\n    onToggleDone = (id) => {\n        this.setState(({arrOfTasks}) => {\n            const arrOfNewData = this.onToggleProperty(arrOfTasks, id, 'done')\n\n            return {\n                arrOfTasks: arrOfNewData\n            }\n        })\n    }\n\n    onToggleImportant = (id) => {\n        this.setState(({arrOfTasks}) => {\n            const arrOfNewData = this.onToggleProperty(arrOfTasks, id, 'important')\n\n            return {\n                arrOfTasks: arrOfNewData\n            }\n        })\n    }\n\n    filterTasks(arr, filter) {\n        switch (filter) {\n            case 'active':\n                return arr.filter((item) => !item.done)\n            case 'done':\n                return arr.filter((item) => item.done)\n            default:\n                return arr\n        }\n    }\n\n    searchTasks(arr, search) {\n        if (search.length === 0) {\n            return arr\n        }\n\n        return arr.filter((item) => {\n            return item.label\n                .toLowerCase()\n                .indexOf(search.toLowerCase()) > -1\n        })\n    }\n\n    render() {\n        const { appHeader } = this.props\n        const { arrOfTasks, search, filter } = this.state\n\n        const arrOfVisibleTasks = this.searchTasks(this.filterTasks(arrOfTasks, filter), search)\n\n        return (\n            <div className=\"wrapper\">\n                <div className=\"flex-row\">\n                    <h1>{appHeader}</h1>\n                    <TasksCounter arrOfTasks={arrOfTasks}/>\n                </div>\n                <div className=\"flex-row\">\n                    <SearchPanel onSearchChange={this.onSearchChange}/>\n                    <FilterPanel onFilterChange={this.onFilterChange}/>\n                </div>\n                <AlertBox\n                    countVisibleTasks={arrOfVisibleTasks.length}\n                    search={search}\n                    filter={filter}/>\n                <ToDoList\n                    arrOfTasks={arrOfVisibleTasks}\n                    onDeleteTask={this.onDeleteTask}\n                    onToggleDone={this.onToggleDone}\n                    onToggleImportant={this.onToggleImportant}/>\n                <FormAddNew onAddTask={this.onAddTask}/>\n            </div>\n        )\n    }\n}\n\n","import App from \"./app\"\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './components/app'\n\nconst appHeader = \"ToDo List\"\n\nReactDOM.render(<App appHeader={appHeader}/>, document.getElementById('root'))"],"sourceRoot":""}